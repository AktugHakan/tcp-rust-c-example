// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: carrier.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_carrier_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_carrier_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "command.pb.h"
#include "response.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_carrier_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_carrier_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_carrier_2eproto;
namespace command {
namespace carrier {
class CommandCarrier;
struct CommandCarrierDefaultTypeInternal;
extern CommandCarrierDefaultTypeInternal _CommandCarrier_default_instance_;
class ResponseCarrier;
struct ResponseCarrierDefaultTypeInternal;
extern ResponseCarrierDefaultTypeInternal _ResponseCarrier_default_instance_;
}  // namespace carrier
}  // namespace command
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace command {
namespace carrier {

// ===================================================================


// -------------------------------------------------------------------

class CommandCarrier final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:command.carrier.CommandCarrier) */ {
 public:
  inline CommandCarrier() : CommandCarrier(nullptr) {}
  ~CommandCarrier() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommandCarrier(::google::protobuf::internal::ConstantInitialized);

  CommandCarrier(const CommandCarrier& from);
  CommandCarrier(CommandCarrier&& from) noexcept
    : CommandCarrier() {
    *this = ::std::move(from);
  }

  inline CommandCarrier& operator=(const CommandCarrier& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommandCarrier& operator=(CommandCarrier&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommandCarrier& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommandCarrier* internal_default_instance() {
    return reinterpret_cast<const CommandCarrier*>(
               &_CommandCarrier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CommandCarrier& a, CommandCarrier& b) {
    a.Swap(&b);
  }
  inline void Swap(CommandCarrier* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommandCarrier* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommandCarrier* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommandCarrier>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommandCarrier& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommandCarrier& from) {
    CommandCarrier::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommandCarrier* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "command.carrier.CommandCarrier";
  }
  protected:
  explicit CommandCarrier(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 2,
    kMsgLenFieldNumber = 1,
  };
  // .command.msg.CommandMessage payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::command::msg::CommandMessage& payload() const;
  PROTOBUF_NODISCARD ::command::msg::CommandMessage* release_payload();
  ::command::msg::CommandMessage* mutable_payload();
  void set_allocated_payload(::command::msg::CommandMessage* value);
  void unsafe_arena_set_allocated_payload(::command::msg::CommandMessage* value);
  ::command::msg::CommandMessage* unsafe_arena_release_payload();

  private:
  const ::command::msg::CommandMessage& _internal_payload() const;
  ::command::msg::CommandMessage* _internal_mutable_payload();

  public:
  // uint32 msg_len = 1;
  void clear_msg_len() ;
  ::uint32_t msg_len() const;
  void set_msg_len(::uint32_t value);

  private:
  ::uint32_t _internal_msg_len() const;
  void _internal_set_msg_len(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:command.carrier.CommandCarrier)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::command::msg::CommandMessage* payload_;
    ::uint32_t msg_len_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_carrier_2eproto;
};// -------------------------------------------------------------------

class ResponseCarrier final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:command.carrier.ResponseCarrier) */ {
 public:
  inline ResponseCarrier() : ResponseCarrier(nullptr) {}
  ~ResponseCarrier() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResponseCarrier(::google::protobuf::internal::ConstantInitialized);

  ResponseCarrier(const ResponseCarrier& from);
  ResponseCarrier(ResponseCarrier&& from) noexcept
    : ResponseCarrier() {
    *this = ::std::move(from);
  }

  inline ResponseCarrier& operator=(const ResponseCarrier& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResponseCarrier& operator=(ResponseCarrier&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResponseCarrier& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResponseCarrier* internal_default_instance() {
    return reinterpret_cast<const ResponseCarrier*>(
               &_ResponseCarrier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResponseCarrier& a, ResponseCarrier& b) {
    a.Swap(&b);
  }
  inline void Swap(ResponseCarrier* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResponseCarrier* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResponseCarrier* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResponseCarrier>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResponseCarrier& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResponseCarrier& from) {
    ResponseCarrier::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseCarrier* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "command.carrier.ResponseCarrier";
  }
  protected:
  explicit ResponseCarrier(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 2,
    kMsgLenFieldNumber = 1,
  };
  // .command.response.ResponseMessage payload = 2;
  bool has_payload() const;
  void clear_payload() ;
  const ::command::response::ResponseMessage& payload() const;
  PROTOBUF_NODISCARD ::command::response::ResponseMessage* release_payload();
  ::command::response::ResponseMessage* mutable_payload();
  void set_allocated_payload(::command::response::ResponseMessage* value);
  void unsafe_arena_set_allocated_payload(::command::response::ResponseMessage* value);
  ::command::response::ResponseMessage* unsafe_arena_release_payload();

  private:
  const ::command::response::ResponseMessage& _internal_payload() const;
  ::command::response::ResponseMessage* _internal_mutable_payload();

  public:
  // uint32 msg_len = 1;
  void clear_msg_len() ;
  ::uint32_t msg_len() const;
  void set_msg_len(::uint32_t value);

  private:
  ::uint32_t _internal_msg_len() const;
  void _internal_set_msg_len(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:command.carrier.ResponseCarrier)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::command::response::ResponseMessage* payload_;
    ::uint32_t msg_len_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_carrier_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CommandCarrier

// uint32 msg_len = 1;
inline void CommandCarrier::clear_msg_len() {
  _impl_.msg_len_ = 0u;
}
inline ::uint32_t CommandCarrier::msg_len() const {
  // @@protoc_insertion_point(field_get:command.carrier.CommandCarrier.msg_len)
  return _internal_msg_len();
}
inline void CommandCarrier::set_msg_len(::uint32_t value) {
  _internal_set_msg_len(value);
  // @@protoc_insertion_point(field_set:command.carrier.CommandCarrier.msg_len)
}
inline ::uint32_t CommandCarrier::_internal_msg_len() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_len_;
}
inline void CommandCarrier::_internal_set_msg_len(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_len_ = value;
}

// .command.msg.CommandMessage payload = 2;
inline bool CommandCarrier::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::command::msg::CommandMessage& CommandCarrier::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::command::msg::CommandMessage* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::command::msg::CommandMessage&>(::command::msg::_CommandMessage_default_instance_);
}
inline const ::command::msg::CommandMessage& CommandCarrier::payload() const {
  // @@protoc_insertion_point(field_get:command.carrier.CommandCarrier.payload)
  return _internal_payload();
}
inline void CommandCarrier::unsafe_arena_set_allocated_payload(::command::msg::CommandMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::command::msg::CommandMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:command.carrier.CommandCarrier.payload)
}
inline ::command::msg::CommandMessage* CommandCarrier::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::command::msg::CommandMessage* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::command::msg::CommandMessage* CommandCarrier::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:command.carrier.CommandCarrier.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::command::msg::CommandMessage* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::command::msg::CommandMessage* CommandCarrier::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::command::msg::CommandMessage>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::command::msg::CommandMessage*>(p);
  }
  return _impl_.payload_;
}
inline ::command::msg::CommandMessage* CommandCarrier::mutable_payload() {
  ::command::msg::CommandMessage* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:command.carrier.CommandCarrier.payload)
  return _msg;
}
inline void CommandCarrier::set_allocated_payload(::command::msg::CommandMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::command::msg::CommandMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:command.carrier.CommandCarrier.payload)
}

// -------------------------------------------------------------------

// ResponseCarrier

// uint32 msg_len = 1;
inline void ResponseCarrier::clear_msg_len() {
  _impl_.msg_len_ = 0u;
}
inline ::uint32_t ResponseCarrier::msg_len() const {
  // @@protoc_insertion_point(field_get:command.carrier.ResponseCarrier.msg_len)
  return _internal_msg_len();
}
inline void ResponseCarrier::set_msg_len(::uint32_t value) {
  _internal_set_msg_len(value);
  // @@protoc_insertion_point(field_set:command.carrier.ResponseCarrier.msg_len)
}
inline ::uint32_t ResponseCarrier::_internal_msg_len() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.msg_len_;
}
inline void ResponseCarrier::_internal_set_msg_len(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.msg_len_ = value;
}

// .command.response.ResponseMessage payload = 2;
inline bool ResponseCarrier::has_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payload_ != nullptr);
  return value;
}
inline const ::command::response::ResponseMessage& ResponseCarrier::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::command::response::ResponseMessage* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::command::response::ResponseMessage&>(::command::response::_ResponseMessage_default_instance_);
}
inline const ::command::response::ResponseMessage& ResponseCarrier::payload() const {
  // @@protoc_insertion_point(field_get:command.carrier.ResponseCarrier.payload)
  return _internal_payload();
}
inline void ResponseCarrier::unsafe_arena_set_allocated_payload(::command::response::ResponseMessage* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = reinterpret_cast<::command::response::ResponseMessage*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:command.carrier.ResponseCarrier.payload)
}
inline ::command::response::ResponseMessage* ResponseCarrier::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::command::response::ResponseMessage* released = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::command::response::ResponseMessage* ResponseCarrier::unsafe_arena_release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:command.carrier.ResponseCarrier.payload)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::command::response::ResponseMessage* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::command::response::ResponseMessage* ResponseCarrier::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::command::response::ResponseMessage>(GetArenaForAllocation());
    _impl_.payload_ = reinterpret_cast<::command::response::ResponseMessage*>(p);
  }
  return _impl_.payload_;
}
inline ::command::response::ResponseMessage* ResponseCarrier::mutable_payload() {
  ::command::response::ResponseMessage* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:command.carrier.ResponseCarrier.payload)
  return _msg;
}
inline void ResponseCarrier::set_allocated_payload(::command::response::ResponseMessage* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payload_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payload_ = reinterpret_cast<::command::response::ResponseMessage*>(value);
  // @@protoc_insertion_point(field_set_allocated:command.carrier.ResponseCarrier.payload)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace carrier
}  // namespace command


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_carrier_2eproto_2epb_2eh
