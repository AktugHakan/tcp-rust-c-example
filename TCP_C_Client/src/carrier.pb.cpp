// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: carrier.proto

#include "carrier.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace command {
namespace carrier {
        template <typename>
PROTOBUF_CONSTEXPR CommandCarrier::CommandCarrier(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.payload_)*/ nullptr,
      /*decltype(_impl_.msg_len_)*/ 0u,
    } {}
struct CommandCarrierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandCarrierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandCarrierDefaultTypeInternal() {}
  union {
    CommandCarrier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandCarrierDefaultTypeInternal _CommandCarrier_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ResponseCarrier::ResponseCarrier(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.payload_)*/ nullptr,
      /*decltype(_impl_.msg_len_)*/ 0u,
    } {}
struct ResponseCarrierDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseCarrierDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseCarrierDefaultTypeInternal() {}
  union {
    ResponseCarrier _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseCarrierDefaultTypeInternal _ResponseCarrier_default_instance_;
}  // namespace carrier
}  // namespace command
static ::_pb::Metadata file_level_metadata_carrier_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_carrier_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_carrier_2eproto = nullptr;
const ::uint32_t TableStruct_carrier_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::command::carrier::CommandCarrier, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::command::carrier::CommandCarrier, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::command::carrier::CommandCarrier, _impl_.msg_len_),
    PROTOBUF_FIELD_OFFSET(::command::carrier::CommandCarrier, _impl_.payload_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::command::carrier::ResponseCarrier, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::command::carrier::ResponseCarrier, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::command::carrier::ResponseCarrier, _impl_.msg_len_),
    PROTOBUF_FIELD_OFFSET(::command::carrier::ResponseCarrier, _impl_.payload_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::command::carrier::CommandCarrier)},
        {12, 22, -1, sizeof(::command::carrier::ResponseCarrier)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::command::carrier::_CommandCarrier_default_instance_._instance,
    &::command::carrier::_ResponseCarrier_default_instance_._instance,
};
const char descriptor_table_protodef_carrier_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rcarrier.proto\022\017command.carrier\032\rcomman"
    "d.proto\032\016response.proto\"O\n\016CommandCarrie"
    "r\022\017\n\007msg_len\030\001 \001(\r\022,\n\007payload\030\002 \001(\0132\033.co"
    "mmand.msg.CommandMessage\"V\n\017ResponseCarr"
    "ier\022\017\n\007msg_len\030\001 \001(\r\0222\n\007payload\030\002 \001(\0132!."
    "command.response.ResponseMessageb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_carrier_2eproto_deps[2] =
    {
        &::descriptor_table_command_2eproto,
        &::descriptor_table_response_2eproto,
};
static ::absl::once_flag descriptor_table_carrier_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_carrier_2eproto = {
    false,
    false,
    240,
    descriptor_table_protodef_carrier_2eproto,
    "carrier.proto",
    &descriptor_table_carrier_2eproto_once,
    descriptor_table_carrier_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_carrier_2eproto::offsets,
    file_level_metadata_carrier_2eproto,
    file_level_enum_descriptors_carrier_2eproto,
    file_level_service_descriptors_carrier_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_carrier_2eproto_getter() {
  return &descriptor_table_carrier_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_carrier_2eproto(&descriptor_table_carrier_2eproto);
namespace command {
namespace carrier {
// ===================================================================

class CommandCarrier::_Internal {
 public:
  using HasBits = decltype(std::declval<CommandCarrier>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_._has_bits_);
  static const ::command::msg::CommandMessage& payload(const CommandCarrier* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::command::msg::CommandMessage& CommandCarrier::_Internal::payload(const CommandCarrier* msg) {
  return *msg->_impl_.payload_;
}
void CommandCarrier::clear_payload() {
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CommandCarrier::CommandCarrier(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:command.carrier.CommandCarrier)
}
CommandCarrier::CommandCarrier(const CommandCarrier& from) : ::google::protobuf::Message() {
  CommandCarrier* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.msg_len_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.payload_ = new ::command::msg::CommandMessage(*from._impl_.payload_);
  }
  _this->_impl_.msg_len_ = from._impl_.msg_len_;

  // @@protoc_insertion_point(copy_constructor:command.carrier.CommandCarrier)
}
inline void CommandCarrier::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.msg_len_){0u},
  };
}
CommandCarrier::~CommandCarrier() {
  // @@protoc_insertion_point(destructor:command.carrier.CommandCarrier)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandCarrier::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.payload_;
}
void CommandCarrier::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CommandCarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:command.carrier.CommandCarrier)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.payload_ != nullptr);
    _impl_.payload_->Clear();
  }
  _impl_.msg_len_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CommandCarrier::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CommandCarrier::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommandCarrier_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .command.msg.CommandMessage payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.payload_)}},
    // uint32 msg_len = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandCarrier, _impl_.msg_len_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.msg_len_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 msg_len = 1;
    {PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.msg_len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .command.msg.CommandMessage payload = 2;
    {PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::command::msg::CommandMessage>()},
  }}, {{
  }},
};

::uint8_t* CommandCarrier::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:command.carrier.CommandCarrier)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 msg_len = 1;
  if (this->_internal_msg_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_msg_len(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .command.msg.CommandMessage payload = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:command.carrier.CommandCarrier)
  return target;
}

::size_t CommandCarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:command.carrier.CommandCarrier)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .command.msg.CommandMessage payload = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.payload_);
  }

  // uint32 msg_len = 1;
  if (this->_internal_msg_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_msg_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CommandCarrier::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CommandCarrier::MergeImpl
};
const ::google::protobuf::Message::ClassData*CommandCarrier::GetClassData() const { return &_class_data_; }


void CommandCarrier::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CommandCarrier*>(&to_msg);
  auto& from = static_cast<const CommandCarrier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:command.carrier.CommandCarrier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_payload()->::command::msg::CommandMessage::MergeFrom(
        from._internal_payload());
  }
  if (from._internal_msg_len() != 0) {
    _this->_internal_set_msg_len(from._internal_msg_len());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandCarrier::CopyFrom(const CommandCarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:command.carrier.CommandCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CommandCarrier::IsInitialized() const {
  return true;
}

void CommandCarrier::InternalSwap(CommandCarrier* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.msg_len_)
      + sizeof(CommandCarrier::_impl_.msg_len_)
      - PROTOBUF_FIELD_OFFSET(CommandCarrier, _impl_.payload_)>(
          reinterpret_cast<char*>(&_impl_.payload_),
          reinterpret_cast<char*>(&other->_impl_.payload_));
}

::google::protobuf::Metadata CommandCarrier::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_carrier_2eproto_getter, &descriptor_table_carrier_2eproto_once,
      file_level_metadata_carrier_2eproto[0]);
}
// ===================================================================

class ResponseCarrier::_Internal {
 public:
  using HasBits = decltype(std::declval<ResponseCarrier>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_._has_bits_);
  static const ::command::response::ResponseMessage& payload(const ResponseCarrier* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::command::response::ResponseMessage& ResponseCarrier::_Internal::payload(const ResponseCarrier* msg) {
  return *msg->_impl_.payload_;
}
void ResponseCarrier::clear_payload() {
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResponseCarrier::ResponseCarrier(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:command.carrier.ResponseCarrier)
}
ResponseCarrier::ResponseCarrier(const ResponseCarrier& from) : ::google::protobuf::Message() {
  ResponseCarrier* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.msg_len_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.payload_ = new ::command::response::ResponseMessage(*from._impl_.payload_);
  }
  _this->_impl_.msg_len_ = from._impl_.msg_len_;

  // @@protoc_insertion_point(copy_constructor:command.carrier.ResponseCarrier)
}
inline void ResponseCarrier::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.payload_){nullptr},
      decltype(_impl_.msg_len_){0u},
  };
}
ResponseCarrier::~ResponseCarrier() {
  // @@protoc_insertion_point(destructor:command.carrier.ResponseCarrier)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResponseCarrier::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.payload_;
}
void ResponseCarrier::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ResponseCarrier::Clear() {
// @@protoc_insertion_point(message_clear_start:command.carrier.ResponseCarrier)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.payload_ != nullptr);
    _impl_.payload_->Clear();
  }
  _impl_.msg_len_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ResponseCarrier::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ResponseCarrier::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ResponseCarrier_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .command.response.ResponseMessage payload = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.payload_)}},
    // uint32 msg_len = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseCarrier, _impl_.msg_len_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.msg_len_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 msg_len = 1;
    {PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.msg_len_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .command.response.ResponseMessage payload = 2;
    {PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::command::response::ResponseMessage>()},
  }}, {{
  }},
};

::uint8_t* ResponseCarrier::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:command.carrier.ResponseCarrier)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 msg_len = 1;
  if (this->_internal_msg_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_msg_len(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .command.response.ResponseMessage payload = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:command.carrier.ResponseCarrier)
  return target;
}

::size_t ResponseCarrier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:command.carrier.ResponseCarrier)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .command.response.ResponseMessage payload = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.payload_);
  }

  // uint32 msg_len = 1;
  if (this->_internal_msg_len() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_msg_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ResponseCarrier::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ResponseCarrier::MergeImpl
};
const ::google::protobuf::Message::ClassData*ResponseCarrier::GetClassData() const { return &_class_data_; }


void ResponseCarrier::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ResponseCarrier*>(&to_msg);
  auto& from = static_cast<const ResponseCarrier&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:command.carrier.ResponseCarrier)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_payload()->::command::response::ResponseMessage::MergeFrom(
        from._internal_payload());
  }
  if (from._internal_msg_len() != 0) {
    _this->_internal_set_msg_len(from._internal_msg_len());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseCarrier::CopyFrom(const ResponseCarrier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:command.carrier.ResponseCarrier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ResponseCarrier::IsInitialized() const {
  return true;
}

void ResponseCarrier::InternalSwap(ResponseCarrier* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.msg_len_)
      + sizeof(ResponseCarrier::_impl_.msg_len_)
      - PROTOBUF_FIELD_OFFSET(ResponseCarrier, _impl_.payload_)>(
          reinterpret_cast<char*>(&_impl_.payload_),
          reinterpret_cast<char*>(&other->_impl_.payload_));
}

::google::protobuf::Metadata ResponseCarrier::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_carrier_2eproto_getter, &descriptor_table_carrier_2eproto_once,
      file_level_metadata_carrier_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace carrier
}  // namespace command
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
